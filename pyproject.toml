[tool.poetry]
name = "associative"
version = "0.1.0"
description = "PyTorch implementation of associative memory models"
authors = ["Ayan Das <bvits@riseup.net>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/b-vitamins/associative"
repository = "https://github.com/b-vitamins/associative"
keywords = ["pytorch", "associative-memory", "hopfield-networks", "energy-based-models", "deep-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.11"
torch = "^2.0.0"
torchvision = "^0.15.0"
torch-geometric = "^2.3.0"
einops = "^0.6.0"
tqdm = "^4.65.0"
hydra-core = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
ruff = "^0.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "C90", "UP", "YTT", "S", "A", "C4", "RET", "SIM", "PD", "PL", "PERF", "RUF"]
ignore = ["E501", "S101"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["PLR0913"]  # Allow many arguments in test functions (pytest fixtures)
"associative/nn/functional/**.py" = ["PLR0913"]  # Functional APIs have many parameters
"associative/nn/modules/normalization.py" = ["PLR0913"]  # Init needs factory kwargs
"associative/nn/modules/vision.py" = ["PLR0913"]  # Init needs many vision params
"associative/nn/modules/optimization.py" = ["PLR0913"]  # Init needs many CCCP params
"associative/nn/modules/continuous.py" = ["PLR0913"]  # Init needs many params
"associative/nn/modules/transformer.py" = ["PLR0913"]  # Forward methods need many params
"associative/utils/graph.py" = ["PLR0913"]  # Graph utilities need many params

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=associative --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
